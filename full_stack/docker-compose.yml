version: '3'
services:


  rabbit.mq:
    image: rabbitmq:3.12.0-management-alpine
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - .env
    networks:
      - pv121_network
    ports:
      - "5672:5672"
      - "15672:15672"

  minio.storage:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9009:9009"
    volumes:
      - ./volumes/minio/storage:/data
    env_file:
      - .env
    command: server --console-address :9009 /data
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network

  nginx.static:
    image: nginx:alpine
    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./volumes/nginx/static-files:/usr/share/nginx/html
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network

  socket.sunny:
    build: ./sockets
    volumes:
      - ./sockets:/usr/src/app
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    depends_on:
      - redis.socket
    environment:
      - NAME=Sunny
    env_file:
      - .env

  socket.jonny:
    build: ./sockets
    volumes:
      - ./sockets:/usr/src/app
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    depends_on:
      - redis.socket
    environment:
      - NAME=Jonny
    env_file:
      - .env

  redis.socket:
    image: 'redis:alpine'
    volumes:
      - './volumes/db/redis/sockets:/data'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network

  redis.cache.jwt:
    image: 'redis:alpine'
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/db/redis/cache/jwt/data:/data
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    env_file:
      - .env

  db.mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - './volumes/db/mongodb/main:/data/db'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    env_file:
      - .env

  db.mysql.main:
    image: 'mysql/mysql-server:latest'
    ports:
      - '33121:3306' # Что бы я мог из редактора посмотреть - что творится в базе данных
    volumes:
      - './volumes/db/mysql/main:/var/lib/mysql'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    env_file:
      - .env

  node.api.auth:
    build: ./node_api_auth
    volumes:
      - ./node_api_auth:/usr/src/app
      - ./volumes/nginx/static-files/nginx-static-files:/usr/src/app/files
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    environment:
      - NAME=NodeApiAuth
    env_file:
      - .env
    depends_on:
      - redis.cache.jwt

  node.api.exchange:
    build: ./node_api_exchange
    volumes:
      - ./node_api_exchange:/usr/src/app
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    environment:
      - NAME=NodeApiExchange
    env_file:
      - .env

  node.api:
    build: ./node_api
    volumes:
      - ./node_api:/usr/src/app
      - ./volumes/nginx/static-files/nginx-static-files:/usr/src/files
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    ports:
      - "3000:3000"
    environment:
      - NAME=NodeApi
    env_file:
      - .env

  front.vue:
    build: ./front_vue
    volumes:
      - ./front_vue:/usr/src/app
    command: sh -c " npm install && npm start "
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    ports:
      - "5173:5173"
    environment:
      - NAME=FrontVue
    env_file:
      - .env

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pv121_network
    ports:
      - "80:80"
    depends_on:
      - front.vue
      - node.api
      - node.api.exchange
      - node.api.auth
      - socket.jonny
      - socket.sunny
      - nginx.static


networks:
  pv121_network:
    driver: bridge
