version: '3'
services:

    api.laravel:
        build:
            context: ./api/laravel/core
            dockerfile: Dockerfile
        command: sh -c "composer install && /var/www/html/artisan serve --host=0.0.0.0"
        volumes:
            - './api/laravel/core:/var/www/html'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121
        environment:
            - NAME=api.laravel
        env_file:
            - .env
        depends_on:
            - db.mysql.main
            - redis.socket

    jobs.laravel:
        build:
            context: ./api/laravel/core
            dockerfile: Dockerfile
        command: sh -c "/var/www/html/artisan queue:work"
        volumes:
            - './api/laravel/core:/var/www/html'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121
        environment:
            - NAME=jobs.laravel
        env_file:
            - .env
        depends_on:
            - db.mysql.main
            - api.laravel

    redis.socket:
        image: 'redis:alpine'
        volumes:
            - './volumes/db/redis/sockets:/data'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121

    redis.laravel:
        image: 'redis:alpine'
        volumes:
            - './volumes/db/redis/laravel:/data'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - "6379:6379"
        networks:
            - pv121

    socket.jonny:
        build: ./sockets/socket_instance
        volumes:
            - ./sockets/socket_instance:/usr/src/app
        command: sh -c " npm install && npm start "
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121
        depends_on:
            - redis.socket
        environment:
            - SERVER_NAME=socket.jonny
        env_file:
            - .env

    storage.minio:
        build: ./storages/minio
        ports:
            - "9000:9000"
            - "9009:9009"
        volumes:
            - ./volumes/storages/minio:/data
        env_file:
            - .env
        command: server --console-address :9009 /data
        #command: server --console-address :9009/store/admin /data
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121

    front.admin:
        build: ./front/admin
        volumes:
            - ./front/admin:/usr/src/app
        command: sh -c " npm install && npm start "
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121
        environment:
            - NAME=front.admin
        env_file:
            - .env

    front.public:
        build: ./front/public
        volumes:
            - ./front/public:/usr/src/app
        command: sh -c " npm install && npm start "
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121
        environment:
            - NAME=front.public
        env_file:
            - .env

    front.docs:
        image: swaggerapi/swagger-ui
        volumes:
            - ./docs:/usr/share/nginx/html/docs
        ports:
            - "8080:8080"
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121
        env_file:
            -   ./docs/doc.env

    nginx:
        image: nginx:alpine
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121
        ports:
            - "80:80"
        depends_on:
            - front.public
            - front.admin
            - api.laravel

    db.mysql.main:
        image: 'mysql/mysql-server:latest'
        ports:
            - '33121:3306' # Что бы я мог из редактора посмотреть - что творится в базе данных
        volumes:
            - './volumes/db/mysql/main:/var/lib/mysql'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - pv121
        env_file:
            - .env

networks:
    pv121:
        driver: bridge
